on: 
  release:
    types: [created]
name: Slack Notification Demo 2
jobs:
  slackNotification:
    name: Slack Notification
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
    
      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.2.3
        env:
          GITHUB_TOKEN: ${{ github.token }}
          
      - name: Set Body
        run: body=${{ toJSON(steps.get_release.outputs.body) }} && echo "RELEASE_BODY=\`\`\`$body\`\`\`" >> $GITHUB_ENV

    
      - name: Slack Notification
        uses: slackapi/slack-github-action@v1.18.0
        with:
          payload: |
            {
              "channel": "demand",
              "username": "Release Announcer",
              "as_user": false,
              "icon_url": "https://ih1.redbubble.net/image.781007202.8647/st,small,845x845-pad,1000x1000,f8f8f8.jpg",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":rocket: Pages `${{ steps.get_release.outputs.name }}` released!"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "${{ env.RELEASE_BODY }}"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Tag*"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Publisher*"
                    },
                    {
                      "type": "plain_text",
                      "text": "<${{ steps.get_release.outputs.html_url }}|${{ steps.get_release.outputs.tag_name }}>"
                    },
                    {
                      "type": "plain_text",
                      "text": "${{ fromJSON(steps.get_release.outputs.author).login }}"
                    }
                  ]
                }
              ] 
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
